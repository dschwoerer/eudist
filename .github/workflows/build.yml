name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "linux x86_64 36"
            os: ubuntu-latest
            arch: x86_64
            build: "cp36* pp36*"
            pyversion: 36
          - name: "linux x86_64 37"
            os: ubuntu-latest
            arch: x86_64
            build: "cp37* pp37*"
            pyversion: 37
          - name: "linux x86_64 38"
            os: ubuntu-latest
            arch: x86_64
            build: "cp38* pp38*"
            pyversion: 38
          - name: "linux x86_64 39"
            os: ubuntu-latest
            arch: x86_64
            build: "cp39* pp39*"
            pyversion: 39
          - name: "linux x86_64 310"
            os: ubuntu-latest
            arch: x86_64
            build: "cp310* pp310*"
            pyversion: 310
          - name: "linux x86_64 311"
            os: ubuntu-latest
            arch: x86_64
            build: "cp311* pp311*"
            pyversion: 311
          - name: "linux x86_64 312"
            os: ubuntu-latest
            arch: x86_64
            build: "cp312* pp312*"
            pyversion: 312
          - name: "linux x86_64 313"
            os: ubuntu-latest
            arch: x86_64
            build: "cp313* pp313*"
            pyversion: 313
          - name: "linux i686 36"
            os: ubuntu-latest
            arch: i686
            build: "cp36* pp36*"
            pyversion: 36
          - name: "linux i686 37"
            os: ubuntu-latest
            arch: i686
            build: "cp37* pp37*"
            pyversion: 37
          - name: "linux i686 38"
            os: ubuntu-latest
            arch: i686
            build: "cp38* pp38*"
            pyversion: 38
          - name: "linux i686 39"
            os: ubuntu-latest
            arch: i686
            build: "cp39* pp39*"
            pyversion: 39
          - name: "linux i686 310"
            os: ubuntu-latest
            arch: i686
            build: "cp310* pp310*"
            pyversion: 310
          - name: "linux i686 311"
            os: ubuntu-latest
            arch: i686
            build: "cp311* pp311*"
            pyversion: 311
          - name: "linux i686 312"
            os: ubuntu-latest
            arch: i686
            build: "cp312* pp312*"
            pyversion: 312
          - name: "linux i686 313"
            os: ubuntu-latest
            arch: i686
            build: "cp313* pp313*"
            pyversion: 313
          - name: "linux aarch64 311"
            os: ubuntu-latest
            arch: aarch64
            build: "cp311* pp311*"
            pyversion: 311
          - name: "linux aarch64 312"
            os: ubuntu-latest
            arch: aarch64
            build: "cp312* pp312*"
            pyversion: 312
          - name: windoof
            os: windows-latest
            build: "*"
          - name: mac intel
            os: macos-13
            build: "*"
          - name: mac arm
            os: macos-14
            build: "*"

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: ${{ contains(matrix.config.name, 'linux') }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.config.arch }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: ${{ matrix.config.build }}
          CIBW_SKIP: "pp*-win_amd64 pp39*linux* pp31?*linux_i686 pp38-mac* pp39-mac* pp38-*linux*"
          CIBW_ARCHS_LINUX: "${{ matrix.config.arch }}"
          # CIBW_TEST_COMMAND: pip install pytest && pytest {package}
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: "dist-${{ matrix.config.os }}-${{ matrix.config.arch }}-${{ matrix.config.pyversion }}"
          path: ./wheelhouse/*.whl


  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 100  # Optional, use if you use setuptools_scm
        submodules: true  # Optional, use if you have submodules

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz


  upload_all:
    needs: [build_wheels, make_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
